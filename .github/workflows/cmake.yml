name: Dromaius build

on:
  push:
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'runtime/**'

env:
    BUILD_TYPE: Release

jobs:
    build_native:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [windows-latest, ubuntu-latest, macOS-latest]

        steps:
            - uses: actions/checkout@v1
              with:
                submodules: true

            - name: Install dependencies (Linux)
              run: |
                sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu `lsb_release -sc` main universe restricted multiverse"
                sudo apt-get update -y -qq
                sudo apt-get install xorg-dev libgl1-mesa-dev
              if: matrix.os == 'ubuntu-latest'

            - name: Create build directory
              run: cmake -E make_directory ${{runner.workspace}}/_build

            - name: Run CMake
              shell: bash
              working-directory: ${{runner.workspace}}/_build
              run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

            - name: Build
              shell: bash
              working-directory: ${{runner.workspace}}/_build
              run: cmake --build . --config $BUILD_TYPE

            - name: Test
              shell: bash
              working-directory: ${{runner.workspace}}/_build
              run: ctest -C $BUILD_TYPE -V

            - name: Prepare artifacts
              shell: bash
              working-directory: ${{runner.workspace}}/_build
              run: |
                  mkdir _arch
                  cmake  --install . --prefix _arch

            - name: Archive build
              uses: actions/upload-artifact@v1
              with:
                  name: dist_${{ matrix.os }}
                  path: ${{runner.workspace}}/_build/_arch

    build_emscripten:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v1
              with:
                  submodules: true

            - name: Configure cache for Emscripten
              uses : actions/cache@v1
              id: cache
              with:
                  path: 'emsdk-cache'
                  key: ${{ runner.os }}--emsdk-2.0.8

            - name: Setup Emscripten
              uses: mymindstorm/setup-emsdk@v7
              with:
                  version: 2.0.8
                  actions-cache-folder: 'emsdk-cache'
                  no-cache: true

            - name: Create build directory
              run: cmake -E make_directory ${{runner.workspace}}/_build

            - name: Run CMake
              shell: bash
              working-directory: ${{runner.workspace}}/_build
              run: emcmake cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

            - name: Build
              shell: bash
              working-directory: ${{runner.workspace}}/_build
              run: cmake --build . --config $BUILD_TYPE

            - name: Prepare artifacts
              shell: bash
              working-directory: ${{runner.workspace}}/_build
              run: |
                  mkdir _arch
                  cmake  --install . --prefix _arch

            - name: Archive build
              uses: actions/upload-artifact@v1
              with:
                  name: dist_emscripten
                  path: ${{runner.workspace}}/_build/_arch
